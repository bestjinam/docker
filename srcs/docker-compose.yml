version: '3.8'

services:
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    pull_policy: never
    image: mariadb:jinam
    container_name: mariadb
    restart: always
    env_file: .env
    volumes:
      - mariadb_data:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - docker-network
    #healthcheck:
    #cmd: mysqladmin ping -hlocalhost -uroot > /dev/null 2>&1
    healthcheck:
        test: [ "CMD", "mysqladmin","ping", "-hlocalhost", "-uroot"]
        start_interval: 1s
        interval: 5s
        timeout: 5s
        retries: 3

  wordpress:
    image: wordpress:jinam
    depends_on:
      #- mariadb
      mariadb:
        condition: service_healthy
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    pull_policy: never
    container_name: wordpress
    restart: always
    env_file: .env
    volumes:
      - wordpress_data:/var/www/html
    expose:
      - "9000"
    networks:
      - docker-network

  nginx:
    image: nginx:jinam
    depends_on:
      - wordpress
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    pull_policy: never
    container_name: nginx
    restart: always
    env_file: .env
    volumes:
      - wordpress_data:/var/www/html
      - my_ssl_data:/etc/my_ssl
    ports:
      - "443:443"
    networks:
      docker-network:
        aliases:
          - jinam.42.fr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      start_interval: 1s
      interval: 5s
      timeout: 5s
      retries: 3
volumes:
  wordpress_data:
    name: wordpress_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/jinam/data/wordpress_data
  mariadb_data:
    name: mariadb_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/jinam/data/mariadb_data
  my_ssl_data:
    name: my_ssl_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/jinam/data/self_cert_ssl_files

networks:
  docker-network:
    name: docker-network
    driver: bridge
